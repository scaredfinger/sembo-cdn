# HTTP configuration
# include       mime.types;
# default_type  application/octet-stream;

# Logging format
log_format json_combined escape=json
'{
  "time_local":"$time_local",
  "remote_addr":"$remote_addr",
  "remote_user":"$remote_user",
  "request":"$request",
  "status": "$status",
  "body_bytes_sent":"$body_bytes_sent",
  "http_referer":"$http_referer",
  "http_user_agent":"$http_user_agent",
  "request_time":"$request_time",
  "upstream_response_time":"$upstream_response_time",
  "route_pattern":"$route_pattern"
}';

access_log /dev/stdout json_combined;

# # Basic settings
# sendfile on;
# tcp_nopush on;
# tcp_nodelay on;
# keepalive_timeout 65;
# types_hash_max_size 2048;

# # Gzip compression
# gzip on;
# gzip_vary on;
# gzip_proxied any;
# gzip_comp_level 6;
# gzip_types
#     text/plain
#     text/css
#     text/xml
#     text/javascript
#     application/json
#     application/javascript
#     application/xml+rss
#     application/atom+xml
#     image/svg+xml;

# Lua settings
lua_package_path '/usr/local/openresty/nginx/lua/?.lua;/usr/local/openresty/nginx/lua/?/init.lua;;';
lua_shared_dict metrics 10m;
lua_shared_dict cache_locks 1m;

# Initialize Lua modules
init_by_lua_file /usr/local/openresty/nginx/lua/init.lua;

# Main server block
server {
    listen 80;
    server_name _;
    
    # Variables for route pattern matching
    set $route_pattern "";
    
    # Health check endpoint
    location /health {
        access_log off;
        content_by_lua_file /usr/local/openresty/nginx/lua/handlers/health.lua;
    }
        
    # Main proxy location
    location / {
        # Unified content handler (handles both route pattern and proxying)
        content_by_lua_file /usr/local/openresty/nginx/lua/handlers/content.lua;
    }
}

# Metrics server (separate port)
server {
    listen 9090;
    server_name _;
    
    location /metrics {
        access_log off;
        content_by_lua_file /usr/local/openresty/nginx/lua/handlers/metrics.lua;
    }
    
    location / {
        return 404 'Metrics endpoint only';
    }
}
