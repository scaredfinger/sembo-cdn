services:
  # Main proxy service
  proxy:
    build:
      context: .
    ports:
      - "8080:80"
      - "8081:8080"
      - "9090:9090"  # metrics endpoint
    environment:
      DNS_RESOLVER: 127.0.0.11
      REDIS_HOST: redis
      REDIS_PORT: 6379
      UPSTREAM_HOST: wiremock
      UPSTREAM_PORT: 8080
      UPSTREAM_HEALTHCHECK_PATH: /__admin/health
      LOG_LEVEL: debug
      ENV: development
      ROUTE_PATTERNS_FILE: /usr/local/openresty/nginx/lua/config/route-patterns.example.json
      ENABLE_ACCESS_LOG: false  # Enable logging
    volumes:
      - .:/workspace
    depends_on:
      - redis
      - wiremock
    develop:
      watch:
        - action: rebuild
          path: ./src
        - action: rebuild
          path: ./nginx
        - action: rebuild
          path: ./config
        - action: rebuild
          path: ./Dockerfile

  # KeyDB service (for development/testing only)
  redis:
    image: eqalpha/keydb:latest

  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - 5540:5540

  redisinsight-config:
    image: alcyondev/redis-insight-config:latest
    environment:
      RI_ACCEPT_EULA: true
      RI_BASE_URL: 'http://redisinsight:5540'
      RI_CONNECTION_NAME: 'redis'
      REDIS_HOST: 'redis'
      REDIS_PORT: 6379
    depends_on:
      - redis
      - redisinsight

  # Wiremock backend for flexible API mocking
  wiremock:
    image: wiremock/wiremock:latest
    volumes:
      - ${HOST_WORKSPACE}/wiremock/mappings:/home/wiremock/mappings
      - ${HOST_WORKSPACE}/wiremock/files:/home/wiremock/__files
    command: ["--disable-banner"]

  cmd:
    image: alpine
    tty: true
    stdin_open: true
    command: ["sh", "-c", "while true; do sleep 3600; done"]

  # Prometheus for metrics collection and monitoring
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ${HOST_WORKSPACE}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"  # Expose Prometheus UI on a different port
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - proxy
